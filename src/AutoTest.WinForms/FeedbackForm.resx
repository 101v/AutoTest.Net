<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAD///8ARW6MAAc+ZgAHPmYABz5mAAc+ZgAHPmYABz5mAAc+ZgAHPmYABz5mEQc+Zl0HPmafBz5mzwc+
        Zu8HPmb+Bz5m/gc+Zu8HPmbPBz5mnwc+Zl0HPmYRBz5mAP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wBFbowABz5mAAc+ZgAHPmYABz5mAAc+ZgAHPmYABz5mKQc+ZqEHPmb3Bz5m/wc+
        Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+ZvcHPmahk6u8KZOrvACTq7wAk6u8AJOr
        vACTq7wAk6u8AK7AzQD///8A////AEVujAAHPmYABz5mAAc+ZgAHPmYABz5mCwc+ZpAHPmb7Bz5m/wc+
        Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb7Bz5mkAc+
        ZgsHPmYABz5mAAc+ZgAHPmYARW6MAP///wD///8ARW6MAAc+ZgAHPmYABz5mAAc+ZicHPmbXBz5m/wc+
        Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+
        Zv8HPmb/Bz5m1wc+ZicHPmYABz5mAAc+ZgBFbowA////AP///wBFbowABz5mAAc+ZgAHPmY0CD9n7Qg/
        Z/8IP2f/CD9n/wg/Z/8IP2f/CD9n/wg/Z/8IP2f/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+
        Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m7Qc+ZjQHPmYABz5mAEVujAD///8A////AEVvjQAIP2cACD9nJwg/
        Z+0JQGj/CUBo/wlAaP8JQGj/CUBo/wlAaP8JQGj/CUBo/wlAaP8IP2f/CD9n/wg/Z/8IP2b/Bz5m/wc+
        Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m7Qc+ZicHPmYARW6MAP///wD///8ARm+NAAlA
        aAsJQGjXCUBo/wpBaf8KQWn/CkFp/wpBaf8KQWn/CkFp/wpBaf8KQWn/CkFp/wpBaP8JQGj/CUBo/wg/
        Z/8IP2f/CD9n/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m1wc+ZgtFbowA////AP//
        /wBHcI4ACkFpkApBaf8LQmn/C0Jq/wtCav8MQ2r/DENq/wxDav8MQ2r/DENq/wtCav8LQmr/C0Jq/wpB
        af8KQWn/CUBo/wlAaP8IP2f/CD9n/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zv8HPmb/Bz5mkEVu
        jAD///8A////AEhxjykLQmr7DENq/wxDa/8MQ2v/DURr/w1EbP8NRGz/DURs/w1EbO4NRGzfDURs3w1E
        a+sMQ2v/DENq/gtCav0LQmn/CkFp7glAaOMJQGjjCD9n8Ag/Z/8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+
        Zv8HPmb7RW6MKf///wDC0NoAOWaGoQxDa/8NRGz/DURs/w5Fbf8ORW3/D0Zt/w9Gbf8PRm3/D0ZtaA9G
        bQAORW0ADkVtXA5FbP8NRGx/DERrdQxDa/8LQmpkC0FpAApBaQAJQGheCD9n/wg/Z/8HPmb/Bz5m/wc+
        Zv8HPmb/Bz5m/wc+Zv82YoOhwc/ZAAxDaxENRGz3DkVs/w5Fbf8PRm7/EEdu/xBHbv8QR2//EEdv/xFI
        b/8QR29QEEdvABBHbwAQR25cD0ZuoA9GbQEORW0ADURsmQxDa2QMQ2oAC0JqAApBaUcJQGj/CD9n/wg/
        Z/8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+ZvcHPmYRDkVsXQ5Fbf8PRm7/EEdu/xFIb/8RSHD/Eklw/xJJ
        cP8SSXH/Eklx/xJJcTgSSXAAEklwABFIcCgRSG8GEEdvAA9GbgAPRm0EDkVsKg1EbAAMQ2sAC0JqMQpB
        af8JQGj/CD9n/wg/Z/8HPmb/Bz5m/wc+Zv8HPmb/Bz5m/wc+Zl0PRm2fEEdu/xFIb/8SSXD/Eklx/xNK
        cf8TSnL/FEty/xRLcv8US3L/FEtyIBRLcgAUS3IAE0pxABJJcQASSXAAEUhvABBHbwAPRm4ADkVtAA1E
        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
        bv8ORW3/DURr/wtCav8KQWnXCUBoCwg/ZwAHPmYAGlF4ABxTegAeVXwAH1Z9JyFYf+0jWYD/JFuB/yVc
        gv8mXYP/Jl2D/yZdg/8lXIP/JFuC/yNagP8iWH//IFd+/x5VfP8dVHr/G1J5/xlQd/8XTnX/FUxz/xNK
        cv8SSXD/EEdu/w5Fbf8NRGv/C0Jq7QpBaScJQGcACD9nAAc+ZgAaUXgAHFN5AB1UewAfVn0AIFd+NCJZ
        f+0jWoH/JFuB/yVcgv8lXIL/JVyC/yRbgv8jWoH/IlmA/yFYfv8fVn3/HlV8/xxTev8aUXj/GU93/xdO
        df8VTHP/E0px/xFIcP8QR27/DkVt/wxDa+0LQmo0CkFoAAhAZwAIPmcABz5mABlQdwAbUnkAHVR6AB5V
        fAAgV30AIVh+JyJZgNcjWoD/JFqB/yRbgf8kW4H/I1qB/yJZgP8hWH//IFd+/x9WfP8dVHv/G1J5/xpR
        eP8YT3b/Fk10/xRLc/8TSnH/EUhv/w9Gbv8ORWzXDENrJwtCaQAJQGgACD9nAAc+ZgAHPmYAGE92ABpR
        eAAcU3oAHVR7AB9VfAAgV30AIVh+CyJZf5AiWYD7IlmA/yJZgP8iWX//IVh//yBXfv8fVn3/HlV7/xxT
        ev8bUnn/GVB3/xdOdf8WTXT/FEty/xJJcP8QR2/7D0ZtkA1EbAsMQ2sACkFpAAlAaAAIP2cABz5mAAc+
        ZgAYT3YAGVB3ABtSeQAcU3oAHVR7AB5VfAAfVn0AIFd+ACFYfikhWH6hIVh+9yBXfv8gV33/H1Z8/x5V
        e/8cU3r/G1J5/xpReP8YT3b/Fk11/xVMc/8TSnH3EUhwoZauwCmWrr8Ala2+AJStvgCUrL0Ak6u9AJOr
        vACTq7wAk6u8ABZNdQAYT3YAGVB3ABtSeQAcU3oAHVR7AB5VfAAfVnwAH1Z9AB9WfQAfVn0RH1Z8XR5V
        fJ8dVHvPHFN67xtSef4aUXj+GE927xdOdc8VTHSfFEtyXRJJcRERSG8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgBgYAQAY
        GAAAGZgAAB/4AAAf+AAAPnwAADw8AAA8PAAB+B+AB+AH4AfAA+AHgAPgB4AB4IAAAAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>